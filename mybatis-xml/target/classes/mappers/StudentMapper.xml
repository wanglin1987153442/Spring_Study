<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.Spring_Study.mybatis.mapper.StudentMapper">
    <insert id="insert" parameterType="student" useGeneratedKeys="true"
            keyProperty="studentId">
        INSERT INTO t_student (clazz_id, student_name, hometown, birthday)
        values (#{clazzId}, #{studentName}, #{hometown}, #{birthday})

    </insert>

    <delete id="delete" parameterType="int">
        DELETE
        FROM t_student
        WHERE student_id = #{studentId}
    </delete>

    <update id="update" parameterType="student">
        UPDATE t_student
        <set>
            <if test="studentName!=null">student_name=#{studentName},</if>
            <if test="hometown!=null">hometown=#{hometown},</if>
            <if test="birthday!=null">birthday=#{birthday}</if>
        </set>
        WHERE student_id =#{studentId}
    </update>

    <insert id="batchInsert" parameterType="com.Spring_Study.mybatis.entity.Student">
        INSERT INTO t_student VALUES
        <!--    collection 对应 集合名称-->
        <foreach collection="students" item="item" index="index" separator=",">
            (#{item.studentId},#{item.clazzId},#{item.studentName},#{item.hometown},#{item.birthday})
        </foreach>
    </insert>

    <delete id="batchDelete" parameterType="com.Spring_Study.mybatis.entity.Student">
        DELETE FROM t_student
        WHERE student_id IN
        <foreach collection='idList' item="item" index="index" open='(' separator="," close=")">
            #{item}
        </foreach>
    </delete>

    <update id="batchUpdate" parameterType="java.util.List">
        <foreach collection="students" item="item" index="index" open="" close="" separator=";">
            UPDATE t_student t

            <set>
                t.student_name=#{item.studentName},
            t.clazz_id=#{item.clazzId}
            </set>
            WHERE t.student_id = ${item.studentId}
        </foreach>
    </update>



    <select id="selectLimit" resultType="Student">
SELECT student_id ,clazz_id,student_name,hometown,birthday
FROM t_student
<!--
或者写成'%${江苏}%'
-->
WHERE clazz_id=${2} AND hometown LIKE '%江苏%'

    </select>

    <select id="selectLimitByDynamicSql" parameterType="Student" resultType="Student">
SELECT student_id,clazz_id,student_name,hometown,birthday
FROM t_student
<where>
    <if test="clazzId!=null">
        clazz_id=#{clazzId}
    </if>
<if test="hometown!=null">
    AND hometown like "%"#{hometown}"%"
</if>
<if test="studentName!=null">
    AND student_name like #{studentName}
</if>
</where>
    </select>

<!--    第二种写法-->
<!--    <select id="selectLimitByDynamicSql" parameterType="Student" resultType="Student">-->
<!--SELECT  student_id,clazz_id,student_name,hometown,birthday-->
<!--FROM t_student-->
<!--WHEER 1=1-->
<!--<choose>-->
<!--    <when test="clazzId!=null">-->
<!--        clazz_id=#{clazzId}-->
<!--    </when>-->
<!--    <when test="hometown!=null">-->
<!--        AND hometown like "%"#{hometown}"%"-->
<!--    </when>-->
<!-- <otherwise>-->
<!--     AND student_id &gt;${0}-->
<!-- </otherwise>-->

<!--</choose>-->
<!--    </select>-->





    <resultMap id="studentMap" type="Student">
        <id column="student_id" property="studentId"/>
        <result column="student_name" property="studentName"/>
        <result column="hometown" property="hometown"/>
        <result column="birthday" property="birthday"/>
        <association property="clazz" javaType="Clazz">
            <id column="clazz_id" property="clazzId"/>
            <result column="clazz_name" property="clazzName"/>
        </association>
    </resultMap>
    <select id="selectAll" resultMap="studentMap">
        SELECT s.student_id, s.student_name, s.hometown, s.birthday, c.clazz_name
        FROM t_student s
                 RIGHT JOIN t_clazz c
                            ON s.clazz_id = c.clazz_id
        ORDER BY s.birthday DESC
    </select>

</mapper>